* * * * * * *
*   wpbf!   *
* * * * * * *

wpbf is a bruteforce tool to remotely test password strength of WordPress bloging software.


Description:

    The script will try, for a given username, to login into the WordPress dashboard through the
    login form using a wordlist for passwords. If the given username is incorrect, it will try to
    find a correct one. When the script success login in, the matched username and password is logged
    and shown on the screen.

    For faster results you can spawn various threads but BE CAREFULL not to flood/DOS the site. Default
    settings can be changed in "config.py" and "logging.conf" files. The wordlist must have one entry per
    line, a small wordlist is provided for testing purposes.


Disclamer:

    This software is provided for educational purposes and testing only: use it in your own sites or
    with permission of the owner. I'm not responsible of what actions people decide to take using this
    software. I'm not not responsible if someone do something against the law using this sofware. Please
    be good and don't do anything harmful.


Author:
    * Andres Tarantini (atarantini@gmail.com)


Requirements:
    * Python 2.6+   (maybe it runs in older versions, if you want to test please notify me)


Features:
    * Basic username detection (parsing content) or enumeration (using TALSOFT-2011-0526 advisory
      that works on WordPress < 3.2-beta2, see http://seclists.org/fulldisclosure/2011/May/493)
    * Threads
    * Searching for keywords in blog's content and use add them to the wordlist
    * HTTP Proxy Support
    * Advanced logging using Python's logging library and logging configuration file


Usage:

    wpbf.py [-h] [-w WORDLIST] [-u USERNAME] [-s SCRIPTPATH] [-t THREADS] [-p PROXY] [-nk] [-eu] url

    positional arguments:
      url                   base URL where WordPress is installed (ex: http://www.myblog.com/)

    optional arguments:
      -w WORDLIST, --wordlist WORDLIST		worldlist file (default: wordlist.txt)
      -u USERNAME, --username USERNAME		username (defaul: admin)
      -s SCRIPTPATH, --scriptpath SCRIPTPATH	relative path to the login form (default: wp-login.php)
      -t THREADS, --threads THREADS		how many threads the script will spawn (default: 5)
      -p PROXY, --proxy PROXY			http proxy (ex: http://localhost:8008/)
      -nk, --nokeywords				Search keywords inside the blog's content and add them
						to the wordlist
      -eu, --enumerateusers			Try to enumerate all users (Wordpress < 3.2-beta2)

Examples:

    BASIC (it will use the default settings (you can change the default settings in config.py file)

	$ ./wpbf.py http://www.mysite.com/blog/


    CUSTOM (using username 'john', not using keywords in the wordlist and trough a local proxy)

	$ ./wpbf.py --nokeywords -u john -p http://localhost:8008/ http://www.mysite.com/blog/


    AGGRESIVE (it will use default settings and spawn 23 threads)

	$ ./wpbf.py -t 23 http://www.mysite.com/blog/


    OUTPUT EXAMPLE (or how the script will behave in a normal run)

	$ ./wpbf.py http://localhost/wordpress/
	2011-06-18 19:11:41,461 - wpbf - INFO - Target URL: http://localhost/wordpress/wp-login.php
	2011-06-18 19:11:41,463 - wpbf - INFO - Checking URL & username...
	2011-06-18 19:11:45,073 - wpbf - INFO - Bruteforcing...
	3 words left
	2011-06-18 19:11:55,147 - wpbf - INFO - Done.
	2011-06-18 19:11:56,641 - wpbf - INFO - Password 'qawsed' found for username 'admin' on http://localhost/wordpress/wp-login.php
